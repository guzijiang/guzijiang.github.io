[{"title":"关于npm intall命令","date":"2017-02-18T08:22:45.000Z","path":"2017/02/18/关于npm install命令/","text":"上文有简单介绍了NVM和NPM，今天再介绍下npm intstall的执行过程 首先要了解Linux的GUI(图形界面)和CLI(命令行界面)，而NPM就是NodeJS模块中的cli项目，也就是说NVM模块是cli类型的module。 当你在Mac上Terminal输入npm install命令时，Linux会执行/lib/node_modules/npm/bin/npm-cli.js这个js文件，其中npm install分别是argv0和argv1，在npm.js中会根据参数argv1继而去执行install.js文件，具体安装哪些模块则是根据package.json中的配置去安装。 那么NPM如何知道每个模块的信息呢？在于NPM模块提供了一个查询服务，叫做registry。以npmjs.org为例，它的查询服务网址是https://registry.npmjs.org/。这个网址后面跟上模块名，就会得到一个JSON对象，里面是该模块所有版本的信息。比如访问https://registry.npmjs.org/react，就会看到react模块所有版本的信息，包括版本号，下载地址。如此NPM就能下载模块到~/npm下，并解压到当前项目的node_modules目录下。 在执行npm install命令的过程中会出现安装过程缓慢的情况，由于GFW原因，我们最好是配置npm镜像，npm镜像的作用在于替换文中所提到的查询服务网址，以及模块信息中的下载地址，由于镜像会复制这些定时更新模块到GFW内的服务器地址上，所以会相应加快NodeJS模块的安装速度。 此处贴一些关于淘宝镜像的链接 http://www.tuicool.com/articles/UVR3qqA http://cnodejs.org/topic/4f9904f9407edba21468f31e","tags":[{"name":"杂记","slug":"杂记","permalink":"http://gucijiang.com/tags/杂记/"}]},{"title":"从nvm,npm说起","date":"2017-01-17T13:43:57.000Z","path":"2017/01/17/从nvm-npm说起/","text":"在安装Hexo的过程中安装了Node的版本管理工具NVM,然后用NVM安装了稳定版本7.4.0的Node以及NPM,那么NVM和NPM的作用又是什么？ NVM的介绍(保证iOS8和iOS9的各自独立的环境) NVM是Node版本管理工具，Node版本从0.1.14到7.4.0之间几十个版本。 NVM将不同的Node版本存储到’~/.nvm//‘下，然后修改$PATH，将指定版本的Node路径加入，这样我们调用的Node命令即是使用指定版本的Node。 NVM的全局模块存在于各自版本的沙箱中，切换版本后需要重新安装，不同版本间也不存在任何冲突。 NPM的介绍(类似于Cocoapods) NPM是Node安装包管理工具，NPM背后的核心原则是模块化安装(模块类似于静态库) 允许用户从NPM服务器下载并安装别人编写的第三方包到本地使用 允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。 NPM是随着Node一并下载安装的 其实不止Node存在NVM和NPM，Ruby存在rvm和gem，Python存在pyenv和pip，以及Objc近两年兴起的第三方包管理工具cocoapods，这些工具的存在使得编程语言的环境切换和包管理变的简洁。 与编程语言第三方包管理工具相关的就是liunx和unix环境的应用安装工具。Mac基Unix，它的工具主要是Homebrew，可以安装相应的应用。而Linux的两大类，RedHat系列（Redhat和Centos等）包管理工具则是yum，Debian系列（Ubuntu等）包管理工具则是apt-get。 下一篇写一些关于NPM安装第三方包的文章","tags":[{"name":"杂记","slug":"杂记","permalink":"http://gucijiang.com/tags/杂记/"}]},{"title":"记于2017.1.15","date":"2017-01-15T15:13:31.000Z","path":"2017/01/15/记于2017-1-15/","text":"1月13号公司年会，1月14号却似喧嚣之后的落寞，看了一点关于Python数据分析的视频，始终是静不下心来，想起了大学毕业至今，茫茫然过去两年有余，自己却止步不前。 工作之余，自己却也一直在学习中，不敢懈怠，但是急于求成，最后却总是浅尝辄止，回过头来，仿佛学会了许多，却又学的太少。 今天折腾了大半天，用hexo简单搭建了下这个博客，想记录自己的生活与成长，敦促自己莫要虚度了这年华。成长与记录，一直都不晚。希望2017年能越来越优秀。","tags":[{"name":"情感","slug":"情感","permalink":"http://gucijiang.com/tags/情感/"}]}]